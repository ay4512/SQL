#For this project, I downloaded Spotify data from Kaggle, and then I created a table to insert the data into. 
#Finally, I performed analytics on the data using SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL);

#Next I inserted the SpotifyData.csv into the table, and I explored the data and produced some questions using the following SQL. 

#Reference 

SELECT*
FROM Spotifydata

#What is the most popular song and who is the artist?
SELECT track_name, artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 1;

#What is the longest song and what is the level of its popularity?
SELECT track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1;

#What are the top 3 energetic songs?
SELECT track_name, energy
FROM BIT_DB.Spotifydata
ORDER BY energy desc
LIMIT 3; 

#What is the average tempo for the top 5 danceable songs?
SELECT AVG (tempo)
FROM BIT_DB.Spotifydata
ORDER BY danceability desc
LIMIT 5;

# What artists have two or more songs in data and how many songs do each artist have?
SELECT artist_name, COUNT(track_name) as NumberOfSongs
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING NumberOfSongs >= 2;
