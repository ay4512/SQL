#In this SQL, I am querying a database with multiple tables to quantify statistics about customers and their order data.

#References
SELECT*
FROM BIT_DB.customers;

SELECT*
FROM BIT_DB.JanSales;

SELECT*
FROM BIT_DB.FebSales;

#How many orders were placed in January?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

#How many of those orders were for an iPhone?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Product = 'iPhone';

#Select the customer account numbers for all the orders that were placed in February.
SELECT distinct acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id = Feb.orderID
WHERE length (orderID) = 6
AND orderID <> 'Order ID';

#Which product was the cheapest one sold in January, and what was the price?
SELECT Product, MIN (price) as Price
FROM BIT_DB.JanSales
WHERE length (orderID) = 6
AND orderID <> 'Order ID';
#Another solution
SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE price in (SELECT min(price) FROM BIT_DB.JanSales);

#What is the total revenue for each product sold in January? Revenue can be calculated using number of products and price of products.
SELECT Product, SUM(Quantity)*price as Revenue
FROM BIT_DB.JanSales
GROUP BY Product;

#Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, Quantity, SUM(Quantity)*price as Revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

#How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(distinct cust.acctnum) as Customers, AVG(Feb.Quantity*price) as Avg_Spent
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderID=cust.order_id
WHERE Feb.Quantity >2
AND length(Feb.orderID) = 6
AND orderID <> 'Order ID';

