--In this SQL, I created multiple tables with small sets for famous celebrities with facts about their lives.
Then I analyzed the statistics of the data and merged the tables with different types of JOINs.

CREATE TABLE Actors (
    Name TEXT, 
    Movie_Title TEXT,
    Spouse TEXT);
INSERT INTO Actors (Name, Movie_Title, Spouse) VALUES ("Johnny Depp", "Pirates of the Caribbean", NULL);
INSERT INTO Actors (Name, Movie_Title, Spouse) VALUES ("Ryan Reynolds", "Deadpool", "Blake Lively");
INSERT INTO Actors (Name, Movie_Title, Spouse) VALUES ("Ewan McGregor", "Star Wars: Episode III - Revenge of the Sith", "Mary Elizabeth Winstead");
INSERT INTO Actors (Name, Movie_Title, Spouse) VALUES ("Scarlett Johansson", "Black Widow", "Colin Jost");
INSERT INTO Actors (Name, Movie_Title, Spouse) VALUES ("Tom Hardy", "Venom", "Charlotte Riley");

CREATE TABLE Singers (
    Name TEXT, 
    Song_Title TEXT,
    Origin TEXT);
INSERT INTO Singers (Name, Song_Title, Origin) VALUES ("Taylor Swift", "Anti-Hero", "West Reading, PA");
INSERT INTO Singers (Name, Song_Title, Origin) VALUES ("The Weeknd", "Blinding Lights", "Toronto, Canada");
INSERT INTO Singers (Name, Song_Title, Origin) VALUES ("PSY", "Gangnam Style", "Seoul, South Korea");
INSERT INTO Singers (Name, Song_Title, Origin) VALUES ("Bruno Mars", "Uptown Funk", "Honolulu, HI");
INSERT INTO Singers (Name, Song_Title, Origin) VALUES ("Snoop Dogg", "Drop It Like It's Hot", "Long Beach, CA");

CREATE TABLE A_Hobby (
    Name TEXT,
    Hobby TEXT);
INSERT INTO A_Hobby (Name, Hobby) VALUES ("Tom Hardy", "Jiu Jitsu");
INSERT INTO A_Hobby (Name, Hobby) VALUES ("Johnny Depp", "Paintings");
INSERT INTO A_Hobby (Name, Hobby) VALUES ("Ryan Reynolds", "Work");
INSERT INTO A_Hobby (Name, Hobby) VALUES ("Scarlett Johansson", "Beekeeping");
INSERT INTO A_Hobby (Name, Hobby) VALUES ("Ewan McGregor", "Motorcycles");

CREATE TABLE S_Hobby (
    Name TEXT,
    Hobby TEXT);
INSERT INTO S_Hobby (Name, Hobby) VALUES ("Snoop Dogg", "Cars");
INSERT INTO S_Hobby (Name, Hobby) VALUES ("The Weeknd", "Fishing");
INSERT INTO S_Hobby (Name, Hobby) VALUES ("Taylor Swift", "Baking");
INSERT INTO S_Hobby (Name, Hobby) VALUES ("PSY", "Drinking");
INSERT INTO S_Hobby (Name, Hobby) VALUES ("Bruno Mars", "Sports");

CREATE TABLE A_Kids (
    Name TEXT, 
    Kids INTEGER);
INSERT INTO A_Kids (Name, Kids) VALUES ("Scarlett Johansson", 2);
INSERT INTO A_Kids (Name, Kids) VALUES ("Tom Hardy", 3);
INSERT INTO A_Kids (Name, Kids) VALUES ("Johnny Depp", 2);
INSERT INTO A_Kids (Name, Kids) VALUES ("Ryan Reynolds", 4);
INSERT INTO A_Kids (Name, Kids) VALUES ("Ewan McGregor", 5);

CREATE TABLE S_Kids (
    Name TEXT, 
    Kids INTEGER);
INSERT INTO S_Kids (Name, Kids) VALUES ("Snoop Dogg", 4);
INSERT INTO S_Kids (Name, Kids) VALUES ("PSY", 2);
INSERT INTO S_Kids (Name, Kids) VALUES ("Bruno Mars", 0);
INSERT INTO S_Kids (Name, Kids) VALUES ("The Weeknd", 0);
INSERT INTO S_Kids (Name, Kids) VALUES ("Taylor Swift", 0);

CREATE TABLE A_BirthMonth (
    Name TEXT, 
    BirthMonth TEXT);
INSERT INTO A_BirthMonth (Name, BirthMonth) VALUES ("Ewan McGregor", "March");
INSERT INTO A_BirthMonth (Name, BirthMonth) VALUES ("Tom Hardy", "September");
INSERT INTO A_BirthMonth (Name, BirthMonth) VALUES ("Johnny Depp", "June");
INSERT INTO A_BirthMonth (Name, BirthMonth) VALUES ("Ryan Reynolds", "October");
INSERT INTO A_BirthMonth (Name, BirthMonth) VALUES ("Scarlett Johansson", "November");

CREATE TABLE S_BirthMonth (
    Name TEXT, 
    BirthMonth TEXT);
INSERT INTO S_BirthMonth (Name, BirthMonth) VALUES ("Bruno Mars", "October");
INSERT INTO S_BirthMonth (Name, BirthMonth) VALUES ("PSY", "December");
INSERT INTO S_BirthMonth (Name, BirthMonth) VALUES ("Snoop Dogg", "October");
INSERT INTO S_BirthMonth (Name, BirthMonth) VALUES ("Taylor Swift", "December");
INSERT INTO S_BirthMonth (Name, BirthMonth) VALUES ("The Weeknd", "February");

--REFERENCE 
SELECT * FROM Actors;
SELECT * FROM Singers;
SELECT * FROM A_Hobby;
SELECT * FROM S_Hobby;
SELECT * FROM A_Kids;
SELECT * FROM S_Kids;
SELECT * FROM A_BirthMonth;
SELECT * FROM S_BirthMonth;

--Create an Implicit INNER JOIN between the Actors and their Hobby tables.
SELECT * FROM Actors, A_Hobby
WHERE Actors.Name = A_Hobby.Name;

--Create an Explicit INNER JOIN between the Actors and their Kids tables. 
SELECT Actors.Name, Actors.Spouse, A_Kids.Kids, Actors.Movie_Title
FROM Actors
JOIN A_Kids
ON Actors.Name = A_Kids.Name;

--What Actors have 3 or more children?
SELECT Actors.Name, A_Kids.Kids
FROM Actors
JOIN A_Kids
ON Actors.Name = A_Kids.Name
WHERE A_Kids.Kids > 3;

--What Singers have children?
SELECT Singers.Name, S_Kids.Kids
FROM Singers 
LEFT OUTER JOIN S_Kids
ON Singers.Name = S_Kids.Name
WHERE S_Kids.Kids > 0;

--Display all information regarding the Actors in a table.
SELECT A.Name, A.Movie_Title, A.Spouse, A_K.Kids, A_H.Hobby, A_B.BirthMonth
FROM Actors A
JOIN A_Kids A_K
ON A.Name = A_K.Name
JOIN A_Hobby A_H
ON A.Name = A_H.Name
JOIN A_BirthMonth A_B
ON A.Name = A_B.Name;


--Display all information regarding the Singers in a table.
SELECT S.Name, S.Song_Title, S.Origin, S_K.Kids, S_H.Hobby, S_B.BirthMonth
FROM Singers S
JOIN S_Kids S_K
ON S.Name = S_K.Name
JOIN S_Hobby S_H
ON S.Name = S_H.Name
JOIN S_BirthMonth S_B
ON S.Name = S_B.Name;

--Combine the birthmonth tables of the celebrities using UNION.
SELECT A.Name, A.BirthMonth
FROM A_BirthMonth A
UNION 
SELECT S.Name, S.BirthMonth
FROM S_BirthMonth S
ORDER BY BirthMonth;

--What celebrities have children?
SELECT A.Name, A.Kids
FROM A_Kids A
UNION 
SELECT S.Name, S.Kids
FROM S_Kids S
WHERE Kids > 0;
